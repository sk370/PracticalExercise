export const data = JSON.parse("{\"key\":\"v-3d10e447\",\"path\":\"/javaframe/03.Spring%20MVC.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"第1章 SpringMVC简介\",\"slug\":\"第1章-springmvc简介\",\"children\":[{\"level\":3,\"title\":\"1.1 Spring MVC介绍\",\"slug\":\"_1-1-spring-mvc介绍\",\"children\":[]},{\"level\":3,\"title\":\"1.2 Spring MVC使用\",\"slug\":\"_1-2-spring-mvc使用\",\"children\":[]}]},{\"level\":2,\"title\":\"第2章 控制器配置\",\"slug\":\"第2章-控制器配置\",\"children\":[{\"level\":3,\"title\":\"2.1 @RequestMapping注解\",\"slug\":\"_2-1-requestmapping注解\",\"children\":[]},{\"level\":3,\"title\":\"2.2 获取请求参数\",\"slug\":\"_2-2-获取请求参数\",\"children\":[]},{\"level\":3,\"title\":\"2.3处理请求参数的乱码\",\"slug\":\"_2-3处理请求参数的乱码\",\"children\":[]}]},{\"level\":2,\"title\":\"第3章 域对象共享数据\",\"slug\":\"第3章-域对象共享数据\",\"children\":[{\"level\":3,\"title\":\"3.1 向request域对象共享数据\",\"slug\":\"_3-1-向request域对象共享数据\",\"children\":[]},{\"level\":3,\"title\":\"3.2 向session域对象共享数据\",\"slug\":\"_3-2-向session域对象共享数据\",\"children\":[]},{\"level\":3,\"title\":\"3.3 向application域对象共享数据\",\"slug\":\"_3-3-向application域对象共享数据\",\"children\":[]}]},{\"level\":2,\"title\":\"第4章 SpringMVC的视图\",\"slug\":\"第4章-springmvc的视图\",\"children\":[{\"level\":3,\"title\":\"4.0 SpringMVC视图介绍\",\"slug\":\"_4-0-springmvc视图介绍\",\"children\":[]},{\"level\":3,\"title\":\"4.1 默认视图\",\"slug\":\"_4-1-默认视图\",\"children\":[]},{\"level\":3,\"title\":\"4.2 其他视图\",\"slug\":\"_4-2-其他视图\",\"children\":[]},{\"level\":3,\"title\":\"4.3 视图控制器view-controller\",\"slug\":\"_4-3-视图控制器view-controller\",\"children\":[]}]},{\"level\":2,\"title\":\"第5章 RESTful风格\",\"slug\":\"第5章-restful风格\",\"children\":[{\"level\":3,\"title\":\"5.1 RESTful简介\",\"slug\":\"_5-1-restful简介\",\"children\":[]},{\"level\":3,\"title\":\"5.2 RESTful的实现\",\"slug\":\"_5-2-restful的实现\",\"children\":[]},{\"level\":3,\"title\":\"5.3 模拟增删改查\",\"slug\":\"_5-3-模拟增删改查\",\"children\":[]}]},{\"level\":2,\"title\":\"第6章 HttpMessageConverter\",\"slug\":\"第6章-httpmessageconverter\",\"children\":[{\"level\":3,\"title\":\"6.1 @RequestBody\",\"slug\":\"_6-1-requestbody\",\"children\":[]},{\"level\":3,\"title\":\"6.2 RequestEntity\",\"slug\":\"_6-2-requestentity\",\"children\":[]},{\"level\":3,\"title\":\"6.3 @ResponseBody\",\"slug\":\"_6-3-responsebody\",\"children\":[]},{\"level\":3,\"title\":\"6.4 ResponseEntity\",\"slug\":\"_6-4-responseentity\",\"children\":[]},{\"level\":3,\"title\":\"6.5 @RestController注解\",\"slug\":\"_6-5-restcontroller注解\",\"children\":[]}]},{\"level\":2,\"title\":\"第7章 拦截器（Interceptor）\",\"slug\":\"第7章-拦截器-interceptor\",\"children\":[{\"level\":3,\"title\":\"7.1 拦截器的介绍\",\"slug\":\"_7-1-拦截器的介绍\",\"children\":[]},{\"level\":3,\"title\":\"7.2 创建及配置拦截器\",\"slug\":\"_7-2-创建及配置拦截器\",\"children\":[]},{\"level\":3,\"title\":\"7.3 多个拦截器执行顺序\",\"slug\":\"_7-3-多个拦截器执行顺序\",\"children\":[]}]},{\"level\":2,\"title\":\"第8章 异常处理器\",\"slug\":\"第8章-异常处理器\",\"children\":[{\"level\":3,\"title\":\"8.1 基于配置的异常处理\",\"slug\":\"_8-1-基于配置的异常处理\",\"children\":[]},{\"level\":3,\"title\":\"8.2 基于注解的异常处理\",\"slug\":\"_8-2-基于注解的异常处理\",\"children\":[]}]},{\"level\":2,\"title\":\"第9章 注解配置Spring MVC\",\"slug\":\"第9章-注解配置spring-mvc\",\"children\":[{\"level\":3,\"title\":\"9.1 创建初始化类，代替web.xml\",\"slug\":\"_9-1-创建初始化类-代替web-xml\",\"children\":[]},{\"level\":3,\"title\":\"9.3 创建springmvc配置类，代替springmvc配置文件\",\"slug\":\"_9-3-创建springmvc配置类-代替springmvc配置文件\",\"children\":[]}]},{\"level\":2,\"title\":\"第10章 SpringMVC执行流程\",\"slug\":\"第10章-springmvc执行流程\",\"children\":[{\"level\":3,\"title\":\"10.1 SpringMVC常用组件\",\"slug\":\"_10-1-springmvc常用组件\",\"children\":[]},{\"level\":3,\"title\":\"10.2 DispatcherServlet初始化过程\",\"slug\":\"_10-2-dispatcherservlet初始化过程\",\"children\":[]},{\"level\":3,\"title\":\"10.3 DispatcherServlet调用组件处理请求过程\",\"slug\":\"_10-3-dispatcherservlet调用组件处理请求过程\",\"children\":[]},{\"level\":3,\"title\":\"10.4 SpringMVC的执行流程\",\"slug\":\"_10-4-springmvc的执行流程\",\"children\":[]}]}],\"readingTime\":{\"minutes\":43.57,\"words\":13071},\"filePathRelative\":\"javaframe/03.Spring MVC.md\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
